<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CommunicationLoadTest" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1311</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <longProp name="ThreadGroup.start_time">1499146763000</longProp>
        <longProp name="ThreadGroup.end_time">1499146763000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">loginId</stringProp>
              <stringProp name="Header.value">qasuperadmin</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">sessionToken</stringProp>
              <stringProp name="Header.value">86zMkaIPyPzeFujTptugU2teA</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">profileCode</stringProp>
              <stringProp name="Header.value">1845735238</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">SupportedApiVersion</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loginRequest" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;login&quot;:&#xd;
	{&#xd;
	&quot;loginId&quot;:&quot;ram.gopal&quot;,&#xd;
	&quot;password&quot;:&quot;123456&quot;,&#xd;
	&quot;macAddress&quot;:&quot;1c:87:2c:9e:8a:21&quot;,&#xd;
	&quot;imeiNumber&quot;:&quot;357870062622548&quot;,&#xd;
	&quot;deviceName&quot;:&quot;a&quot;,&#xd;
	&quot;platform&quot;:&quot;web&quot;,&#xd;
	&quot;osName&quot;:&quot;android&quot;,&#xd;
	&quot;osVersion&quot;:&quot;5.0&quot;,&#xd;
	&quot;buildVersion&quot;:&quot;4.1.2.5&quot;,&#xd;
	&quot;deviceCode&quot;:&quot;&quot;&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">intbl.fliplearn.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sendEvent" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;message&quot;: {&#xd;
    &quot;schoolCode&quot;: &quot;${schoolCode}&quot;,&#xd;
    &quot;schoolAyid&quot;: &quot;4&quot;,&#xd;
    &quot;messageText&quot;: &quot;&quot;,&#xd;
    &quot;tags&quot;: [{&#xd;
      &quot;tags&quot;: &quot;#announcement&quot;&#xd;
    }],&#xd;
    &quot;target&quot;: [{&#xd;
      &quot;targetId&quot;: &quot;${targetId}&quot;,&#xd;
      &quot;type&quot;: &quot;G&quot;,&#xd;
      &quot;role&quot;: &quot;&quot;&#xd;
    }],&#xd;
    &quot;sendsms&quot;: 0,&#xd;
    &quot;title&quot;: &quot;Happy Teacher&apos;s Day!!!&quot;,&#xd;
    &quot;assetSetCode&quot;: &quot;11543552&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">bl.fliplearn.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/message/createMessage</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TestData" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">communicationData_TeachersDay.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">schoolCode,ayId,targetId</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
          <stringProp name="BeanShellAssertion.query">import java.util.*; 
import java.text.SimpleDateFormat; 
Date apiDate = new Date(); 
SimpleDateFormat apiFormatDT = new SimpleDateFormat(&quot;dd-MMM-yyyy hh:mm:ss a&quot;);
SimpleDateFormat apiFormatDTFN = new SimpleDateFormat(&quot;ddMMMyyyy_hh&quot;);
String apiResData = new String(ResponseData);
String apiResCode = new String(ResponseCode);
String apiReqData = new String(SamplerData);
String apiThreadGroup = ctx.getThreadGroup().getName();
String apiSample = SampleResult.getSampleLabel();
String apiResultCode = SampleResult.getResponseCode();
String apiResultDesc = SampleResult.getResponseMessage();
long apiResponseTime = SampleResult.getTime();
int apiBodySize = SampleResult.getBodySize();

String apiRunDateTime = apiFormatDT.format(apiDate);
String apiRunFileDT = apiFormatDTFN.format(apiDate);
//FileWriter apiWrite = new FileWriter(&quot;/home/satya/Documents/FEPL_API_AUTOMATION/Communication/Communication_TeachersDay.txt&quot;,true);
FileWriter apiWrite = new FileWriter(&quot;/opt/automation/communication/Communication_TeachersDay.txt&quot;,true);
BufferedWriter apiOut = new BufferedWriter(apiWrite);
    	print(&quot;\n****Starting Execution*********\n&quot;);
    	print(apiReqData+&quot;\n&quot;);
    	print(apiResData+&quot;\n&quot;);
    	print(&quot;\n****Ending of API Execution*********\n&quot;);
    	//apiOut.write(&quot;\n*******&quot;+apiThreadGroup+&quot;********\n\n&quot;);
    	//apiOut.write(apiReqData+&quot;\n&quot;);
    	apiOut.write(&quot;{\n&quot;);
    	apiOut.write(&quot;\&quot;api_name\&quot;:\&quot;&quot;+apiSample+&quot;\&quot;,\n&quot;);
    	apiOut.write(&quot;\&quot;api_runTime\&quot;:\&quot;&quot;+apiRunDateTime+&quot;\&quot;,\n&quot;);
    	apiOut.write(&quot;\&quot;api_responseCode\&quot;:\&quot;&quot;+apiResultCode+&quot;\&quot;&quot;);
    	apiOut.write(apiResultDesc+&quot;,\n&quot;);
    	apiOut.write(&quot;\&quot;api_responseTime\&quot;:\&quot;&quot;+apiResponseTime+&quot;\&quot;,\n&quot;);
    	apiOut.write(&quot;\&quot;api_responseData\&quot;:\&quot;\n&quot;+apiResData+&quot;\&quot;,\n&quot;);
    	apiOut.write(&quot;api_resultDesc:&quot;+apiResultDesc+&quot;,\n&quot;);
    	apiOut.write(&quot;\&quot;api_responseBodySize\&quot;:\&quot;&quot;+apiBodySize+&quot;\&quot;\n&quot;);
	apiOut.write(&quot;},\n&quot;);
	apiOut.close();
	apiWrite.close();</stringProp>
          <stringProp name="BeanShellAssertion.filename"></stringProp>
          <stringProp name="BeanShellAssertion.parameters"></stringProp>
          <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
        </BeanShellAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
